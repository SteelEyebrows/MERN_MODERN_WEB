{"version":3,"sources":["lib/hoc/withSplitting/withSplitting.js","store/constants.js","store/actions/action-helpers.js","store/actions/_auth.js","lib/routes/routes.js","page/index.js","App.js","lib/routes/history.js","store/reducers/auth/_auth.js","store/reducers/index.js","lib/client/index.js","lib/api/_auth.js","lib/storage/index.js","store/sagas/_auth.js","store/sagas/index.js","store/index.js","grobalStyle.js","index.js"],"names":["withSplitting","getComponent","props","state","Splitted","then","default","setState","this","React","REQUEST","SUCCESS","FAILURE","createRequestTypes","base","reduce","acc","type","POST_LOGIN","POST_LOGOUT","POST_REGISTER","createAction","payload","undefined","Actions","loginRequest","data","loginSuccess","loginFailure","logOutRequest","logOutSuccess","logOutFailure","registerRequest","registerSuccess","registerFailure","routes","path","page","exact","App","Helmet","htmlAttributes","lang","meta","name","content","title","map","i","component","key","browserHistory","createBrowserHistory","initialState","user","isAuthenticated","rootReducer","combineReducers","auth","action","console","log","client","axios","create","baseURL","timeout","get","response","post","put","result","delete","localStorage","fetchRegister","watchFetchRegister","call","Auth","alert","takeLatest","all","fork","authSaga","rootStore","sagaMiddleware","createSagaMiddleware","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","logger","store","createStore","rootSaga","run","configureStore","GlobalStyle","createGlobalStyle","ReactDOM","render","history","document","getElementById"],"mappings":"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","file":"static/js/main.9296d042.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nconst withSplitting = getComponent =>{\r\n    class withSplitting extends React.Component {\r\n        state={\r\n            Splitted:null\r\n        };\r\n        constructor(props){\r\n            super(props);\r\n            getComponent().then(({default:Splitted})=>{\r\n                this.setState({\r\n                    Splitted\r\n                });\r\n            });\r\n        }\r\n        render(){\r\n            const {Splitted} = this.state;\r\n            if(!Splitted){\r\n                return null;\r\n            }\r\n            return <Splitted {...this.props}/>;\r\n        }\r\n    }\r\n    return withSplitting;\r\n}\r\nexport default withSplitting;\r\n","export const REQUEST = \"REQUEST\";\r\nexport const SUCCESS = \"SUCCESS\";\r\nexport const FAILURE = \"FAILURE\";\r\n\r\n\r\nfunction createRequestTypes(base){\r\n    return [REQUEST,SUCCESS,FAILURE].reduce(\r\n        (acc,type)=>{\r\n            acc[type] = `${base}_${type}`;\r\n            return acc;\r\n        },{}\r\n    )\r\n}\r\n\r\nexport const POST_LOGIN = createRequestTypes(\"POST_LOGIN\");\r\nexport const POST_LOGOUT = createRequestTypes(\"POST_LOGOUT\");\r\nexport const POST_REGISTER = createRequestTypes(\"POST_REGISTER\");\r\n","export function createAction(type, payload) {\r\n  return payload == undefined ? { type } : { type, payload };\r\n}\r\n","import {\r\n    POST_LOGIN,\r\n    POST_LOGOUT,\r\n    POST_REGISTER,\r\n    REQUEST,\r\n    SUCCESS,\r\n    FAILURE\r\n  } from \"../constants\";\r\n  import { createAction } from \"./action-helpers\";\r\n  \r\n  export const Actions = {\r\n\r\n    loginRequest: (data) => createAction(POST_LOGIN[REQUEST], data),\r\n    loginSuccess: (data) => createAction(POST_LOGIN[SUCCESS], data),\r\n    loginFailure: (data) => createAction(POST_LOGIN[FAILURE], data),\r\n\r\n    logOutRequest: (data) => createAction(POST_LOGOUT[REQUEST], data),\r\n    logOutSuccess: (data) => createAction(POST_LOGOUT[SUCCESS], data),\r\n    logOutFailure: (data) => createAction(POST_LOGOUT[FAILURE], data),\r\n\r\n    registerRequest:(data) =>createAction(POST_REGISTER[REQUEST],data),\r\n    registerSuccess:(data) =>createAction(POST_REGISTER[SUCCESS],data),\r\n    registerFailure:(data) =>createAction(POST_REGISTER[FAILURE],data),\r\n  };\r\n","import {Home,Login,Register} from 'page';\r\n\r\n\r\nexport const routes =[\r\n    {\r\n        path:'/MERN_MODERN_WEB',\r\n        page:Home,\r\n        exact:true\r\n    },\r\n    {\r\n        path:'/login',\r\n        page:Login,\r\n        exact:true\r\n    },\r\n    {\r\n        path:'/register',\r\n        page:Register,\r\n        exact:true\r\n    }\r\n]","import withSplitting from '../lib/hoc/withSplitting';\r\n\r\nexport const Home = withSplitting(()=>import('./_Home'));\r\nexport const Login = withSplitting(()=>import('./_Login'));\r\nexport const Register = withSplitting(()=>import('./_Register'));\r\n","import React from 'react';\nimport {Route,Switch} from 'react-router-dom';\nimport {routes} from 'lib/routes/routes';\nimport {Helmet} from 'react-helmet';\n\nfunction App() {\n\n  return (\n    <>\n      <Helmet htmlAttributes={{lang:\"en\"}}\n        meta={[{\n          name:'des',\n          content:'content'\n        }]}\n        title=\"NIKE MODERN WEB\"/>\n        <Switch>\n          {\n            routes.map(({path,page,exact},i)=>(\n              <Route exact={exact} path={path} component={page} key={i}/>\n            ))\n          }\n      </Switch>     \n    </>\n  );\n}\n\nexport default App;\n","import {createBrowserHistory} from 'history';\r\n\r\nconst browserHistory = createBrowserHistory();\r\n\r\nexport default browserHistory;","import {\r\n    POST_LOGIN,\r\n    POST_LOGOUT,\r\n    POST_REGISTER,\r\n    REQUEST,\r\n    SUCCESS,\r\n    FAILURE\r\n  } from \"../../constants\";\r\n\r\n  \r\n  const initialState = {\r\n    user: {\r\n      name: \"\",\r\n      isAuthenticated: false,\r\n      user: null,\r\n    }\r\n  };\r\n  \r\n  export default function(state = initialState, action){\r\n    switch (action.type) {\r\n      case POST_LOGIN[REQUEST]:\r\n            return {\r\n            ...state,\r\n            isAuthenticated: false,\r\n            };\r\n      case POST_LOGIN[SUCCESS]:\r\n        const {payload} =action;\r\n            return {\r\n            ...state,\r\n            isAuthenticated: true,\r\n            user:payload\r\n            };\r\n      case POST_LOGIN[FAILURE]:\r\n            return {\r\n            ...state,\r\n            };\r\n\r\n      case POST_LOGOUT[REQUEST]:\r\n            return {\r\n              ...state,\r\n            };\r\n      case POST_LOGOUT[SUCCESS]:\r\n            return {\r\n              ...state,\r\n              isAuthenticated: false,\r\n              user:{}\r\n            };\r\n      case POST_LOGOUT[FAILURE]:\r\n            return {\r\n              ...state,\r\n            };      \r\n\r\n      case POST_REGISTER[REQUEST]:\r\n        console.log('-------------');\r\n            return {\r\n              ...state,\r\n            };      \r\n      case POST_REGISTER[SUCCESS]:\r\n            return {\r\n              ...state,\r\n            };       \r\n      case POST_REGISTER[FAILURE]:\r\n            return {\r\n              ...state,\r\n            };                        \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from \"redux\";\r\n\r\nimport authReducer from './auth';\r\nexport const rootReducer = combineReducers({\r\n  auth:authReducer,\r\n  });\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nclass Client {\r\n\r\n  constructor() {\r\n    this.axios = axios.create({\r\n        baseURL: 'http://localhost:5000/api/',\r\n        timeout: 10000,\r\n    });\r\n  }\r\n    get(path, payload = null) {\r\n        return this.axios\r\n        .get(path, payload)\r\n        .then((response) => response);\r\n    }\r\n\r\n    post(path, payload) {\r\n        return this.axios\r\n        .post(path, payload)\r\n        .then((response) => response);\r\n    }\r\n\r\n    put(path, payload) {\r\n        return this.axios\r\n        .put(path, payload)\r\n        .then((result) => result);\r\n    }\r\n\r\n    delete(path, payload = null) {\r\n        return this.axios\r\n        .delete(path, payload)\r\n        .then((result) => result);\r\n    }\r\n}\r\n\r\nconst client = new Client();\r\n\r\nexport default client;\r\n","import client from \"../client\";\r\n\r\nexport const postRegister = (payload) =>\r\n   client.post('register',payload)\r\n\r\nexport default{\r\n    postRegister\r\n}   ","\r\n  const st = typeof localStorage === \"object\" ? localStorage : {};\r\n\r\n  const storage = {\r\n    set(key, value) {\r\n      st[key] = JSON.stringify(value);\r\n    },\r\n    get(key) {\r\n      if (!st[key]) return null;\r\n      const value = st[key];\r\n      try {\r\n        const parsed = JSON.parse(value);\r\n        return parsed;\r\n      } catch (e) {\r\n        return value;\r\n      }\r\n    },\r\n    remove(key) {\r\n      delete st[key];\r\n    },\r\n    clear() {\r\n      if (st.clear) {\r\n        st.clear();\r\n      }\r\n    }\r\n  };\r\n  \r\n  export default storage;\r\n  ","\r\nimport {\r\n    POST_LOGIN,\r\n    POST_LOGOUT,\r\n    POST_REGISTER,\r\n    REQUEST,\r\n  } from \"../constants\";\r\nimport {Auth} from \"../../lib/api\";\r\nimport { authAction } from \"../actions\";\r\nimport { call, put, all,fork,takeLatest } from \"redux-saga/effects\";\r\nimport storage from '../../lib/storage';\r\n\r\n// export function* fetchLogin({ payload }) {\r\n//   try {\r\n//     const  data  = yield call(Auth.postLogin,payload);\r\n//     console.log(data);\r\n//     yield storage.set(\"AUTH\", data.username);\r\n//     yield put(authAction.loginSuccess(data));\r\n// }\r\n//   catch(error) {\r\n//     alert(\"아이디와 비밀번호를 확인해주세요\");\r\n//   }\r\n// }\r\n\r\n// export function* fetchLogOut({ payload }) {\r\n//   try {\r\n//     yield storage.set(\"AUTH\", \"undefined\");\r\n//     yield put(authAction.logOutSuccess());\r\n// }\r\n//   catch(error) {\r\n//     alert(\"로그아웃 오류\");\r\n//   }\r\n// }\r\n\r\nexport function* fetchRegister({ payload }) {\r\n    try {\r\n      const  data  = yield call(Auth.postRegister,payload);\r\n      // yield put(authAction.registerSuccess(data));\r\n  }\r\n    catch(error) {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n\r\n// export function* watchFetchLogin() {\r\n//     yield takeLatest([POST_LOGIN[REQUEST]], fetchLogin);\r\n// }\r\n// export function* watchFetchLogOut() {\r\n//   yield takeLatest([POST_LOGOUT[REQUEST]], fetchLogOut);\r\n// }\r\nexport function* watchFetchRegister() {\r\n    yield takeLatest([POST_REGISTER[REQUEST]], fetchRegister);\r\n}\r\n\r\n\r\nexport default function*()  {\r\n    yield all([\r\n        fork(watchFetchRegister),\r\n      ]);\r\n}\r\n","import authSaga from './_auth';\r\n\r\nexport default [\r\n    authSaga,\r\n]","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport logger from \"redux-logger\";\r\nimport { rootReducer } from \"./reducers\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nfunction configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const enhancers = composeEnhancers(applyMiddleware(sagaMiddleware, logger));\r\n\r\n  const store = createStore(rootReducer, enhancers);\r\n\r\n  rootSaga.map(sagaMiddleware.run);\r\n\r\n  return store;\r\n}\r\n\r\nconst rootStore = configureStore();\r\n\r\nexport default rootStore;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  @font-face { font-family: 'Braga'; src: url('Braga') format('ttf'); font-weight: normal; font-style: normal; }\r\n  @font-face { font-family: 'Getsy'; src: url('Getsy') format('ttf'); font-weight: normal; font-style: normal; }\r\n  @font-face { font-family: 'Estillon'; src: url('Estillon') format('ttf'); font-weight: normal; font-style: normal; }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  a,h2{\r\n    font-family: 'Getsy';\r\n    color:#2e293c;  \r\n    }\r\n  b,h1{\r\n    font-family: 'Braga';\r\n  }\r\n  p,h3,h4,h5{\r\n    font-family: 'Estillon';\r\n  }\r\n  ul {\r\n    list-style-type: none;\r\n}\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport history from \"./lib/routes/history\";\nimport store from \"store\";\nimport {GlobalStyle} from './grobalStyle';\n\nReactDOM.render(\n  <Provider store={store}>\n      <Router history={history}>\n        <GlobalStyle />\n        <App/>\n      </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}